    lw 0 2 mcand   ; โหลดค่าจาก "mcand" ลง R2
    lw 0 3 mplier  ; โหลดค่าจาก "mplier" ลง R3
    lw 0 5 one     ; โหลดค่า 1 ลง R5
    lw 0 7 neg_one ; โหลดค่า -1 ลง R7
    add 8 2 0      ; ตั้งค่า R0 เป็น 0 (ผลลัพธ์)
    add 9 3 0      ; ตั้งค่า R4 เป็น 0 (สำหรับการเช็ค Multiplier)
multiply    add 10 8 0     ; บวกค่าใน R2 เข้ากับ R0 (ผลลัพธ์)
    add 11 9 0     ; คูณ R4 ด้วย 0 (ซ้ายเลื่อนการเช็ค)
    add 12 3 7     ; ลบ 1 จาก R3 (R3 = R3 - R7)
    beq 12 0 end   ; ถ้า R12 เป็น 0 ให้จบการทำงาน
    beq 11 0 shift_left  ; ถ้า R11 เป็น 0 (ตรวจสอบค่าทางซ้ายของ Multiplier) ให้ไปที่ตรง shift_left
    jalr 13 multiply ; กระโดดกลับไปยัง multiply และส่ง return address ไปยัง R13
shift_left  add 0 0 10     ; การบวกค่าตัวมันเองคือการซ้ายเลื่อน (shift left)
    add 11 11 7    ; ลบ 1 จาก R11 (R11 = R11 - R7)
    beq 11 0 shift_right  ; ถ้า R11 เป็น 0 (ตรวจสอบค่าทางซ้ายของ Multiplier) ให้ไปที่ตรง shift_right
    jalr 13 multiply ; กระโดดกลับไปยัง multiply และส่ง return address ไปยัง R13
shift_right add 11 11 5    ; บวก 1 กับ R11 (R11 = R11 + R5)
    noop            ; คำสั่ง No operation (ไม่มีการเปลี่ยนแปลงสถานะ)
    beq 11 0 end   ; ถ้า R11 เป็น 0 ให้จบการทำงาน
    jalr 13 multiply ; กระโดดกลับไปยัง multiply และส่ง return address ไปยัง R13
end add 0 8 0      ; บันทึกผลลัพธ์ที่อยู่ใน R2 ลงใน "result"
    halt
mcand .fill 32766   ; ค่าตัวตั้ง (Multiplicand)
mplier .fill 10383  ; ค่าตัวหาร (Multiplier)
result .fill 0      ; ค่าผลลัพธ์ (Result)
one .fill 1          ; ค่า 1
neg_one .fill -1     ; ค่า -1
